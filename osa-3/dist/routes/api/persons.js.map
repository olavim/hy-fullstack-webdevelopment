{"version":3,"sources":["../../../src/routes/api/persons.js"],"names":["isValidId","id","match","router","Router","use","req","res","next","params","status","message","get","persons","find","json","person","findById","delete","findByIdAndRemove","put","findByIdAndUpdate","body","new","post","newPerson","save"],"mappings":";;;;;;AAAA;;;;AACA;;;;AACA;;;;;;;;AAEA,MAAMA,YAAYC,MAAMA,GAAGC,KAAH,CAAS,mBAAT,CAAxB;;kBAEe,MAAM;AACpB,OAAMC,SAAS,kBAAQC,MAAR,EAAf;;AAEAD,QAAOE,GAAP,CAAW,MAAX,EAAmB,CAACC,GAAD,EAAMC,GAAN,EAAWC,IAAX,KAAoB;AACtC,MAAI,CAACR,UAAUM,IAAIG,MAAJ,CAAWR,EAArB,CAAL,EAA+B;AAC9B,SAAM,EAACS,QAAQ,GAAT,EAAcC,SAAS,YAAvB,EAAN;AACA;;AAEDH;AACA,EAND;;AAQAL,QAAOS,GAAP,CAAW,GAAX,EAAgB;AAAA,+BAAa,WAAMN,GAAN,EAAWC,GAAX,EAAmB;AAC/C,SAAMM,UAAU,MAAM,iBAAOC,IAAP,EAAtB;AACAP,OAAIQ,IAAJ,CAASF,OAAT;AACA,GAHe;;AAAA;AAAA;AAAA;AAAA,MAAhB;;AAKAV,QAAOS,GAAP,CAAW,MAAX,EAAmB;AAAA,gCAAa,WAAMN,GAAN,EAAWC,GAAX,EAAmB;AAClD,SAAM,EAACN,EAAD,KAAOK,IAAIG,MAAjB;AACA,SAAMO,SAAS,MAAM,iBAAOC,QAAP,CAAgBhB,EAAhB,CAArB;;AAEA,OAAI,CAACe,MAAL,EAAa;AACZ,UAAM,EAACN,QAAQ,GAAT,EAAcC,SAAS,uBAAvB,EAAN;AACA;;AAEDJ,OAAIQ,IAAJ,CAASC,MAAT;AACA,GATkB;;AAAA;AAAA;AAAA;AAAA,MAAnB;;AAWAb,QAAOe,MAAP,CAAc,MAAd,EAAsB;AAAA,gCAAa,WAAMZ,GAAN,EAAWC,GAAX,EAAmB;AACrD,SAAM,EAACN,EAAD,KAAOK,IAAIG,MAAjB;AACA,SAAM,iBAAOU,iBAAP,CAAyBlB,EAAzB,CAAN;AACAM,OAAIQ,IAAJ,CAAS,EAACL,QAAQ,IAAT,EAAT;AACA,GAJqB;;AAAA;AAAA;AAAA;AAAA,MAAtB;;AAMAP,QAAOiB,GAAP,CAAW,MAAX,EAAmB;AAAA,gCAAa,WAAMd,GAAN,EAAWC,GAAX,EAAmB;AAClD,SAAM,EAACN,EAAD,KAAOK,IAAIG,MAAjB;AACA,SAAMO,SAAS,MAAM,iBAAOK,iBAAP,CAAyBpB,EAAzB,EAA6BK,IAAIgB,IAAjC,EAAuC,EAACC,KAAK,IAAN,EAAvC,CAArB;AACAhB,OAAIQ,IAAJ,CAASC,MAAT;AACA,GAJkB;;AAAA;AAAA;AAAA;AAAA,MAAnB;;AAMAb,QAAOqB,IAAP,CAAY,GAAZ,EAAiB;AAAA,gCAAa,WAAMlB,GAAN,EAAWC,GAAX,EAAmB;AAChD,SAAMS,SAAS,qBAAWV,IAAIgB,IAAf,CAAf;AACA,SAAMG,YAAY,MAAMT,OAAOU,IAAP,EAAxB;AACAnB,OAAIQ,IAAJ,CAASU,SAAT;AACA,GAJgB;;AAAA;AAAA;AAAA;AAAA,MAAjB;;AAMA,QAAOtB,MAAP;AACA,C","file":"persons.js","sourcesContent":["import express from 'express';\nimport asyncHandler from 'express-async-handler';\nimport Person from '../../models/person';\n\nconst isValidId = id => id.match(/^[0-9a-fA-F]{24}$/);\n\nexport default () => {\n\tconst router = express.Router();\n\n\trouter.use('/:id', (req, res, next) => {\n\t\tif (!isValidId(req.params.id)) {\n\t\t\tthrow {status: 400, message: 'invalid id'}\n\t\t}\n\n\t\tnext();\n\t});\n\n\trouter.get('/', asyncHandler(async(req, res) => {\n\t\tconst persons = await Person.find();\n\t\tres.json(persons);\n\t}));\n\n\trouter.get('/:id', asyncHandler(async(req, res) => {\n\t\tconst {id} = req.params;\n\t\tconst person = await Person.findById(id);\n\n\t\tif (!person) {\n\t\t\tthrow {status: 404, message: 'record does not exist'}\n\t\t}\n\n\t\tres.json(person);\n\t}));\n\n\trouter.delete('/:id', asyncHandler(async(req, res) => {\n\t\tconst {id} = req.params;\n\t\tawait Person.findByIdAndRemove(id);\n\t\tres.json({status: 'ok'});\n\t}));\n\n\trouter.put('/:id', asyncHandler(async(req, res) => {\n\t\tconst {id} = req.params;\n\t\tconst person = await Person.findByIdAndUpdate(id, req.body, {new: true});\n\t\tres.json(person);\n\t}));\n\n\trouter.post('/', asyncHandler(async(req, res) => {\n\t\tconst person = new Person(req.body);\n\t\tconst newPerson = await person.save();\n\t\tres.json(newPerson);\n\t}));\n\n\treturn router;\n}"]}