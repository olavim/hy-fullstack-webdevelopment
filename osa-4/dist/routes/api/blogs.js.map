{"version":3,"sources":["../../../src/routes/api/blogs.js"],"names":["router","Router","get","request","response","blogs","find","json","post","blog","body","validate","err","status","message","savedBlog","save","delete","id","params","findByIdAndRemove","put","findByIdAndUpdate","new"],"mappings":";;;;;;AAAA;;;;AACA;;;;AACA;;;;;;;;kBAEe,MAAM;AACpB,OAAMA,SAAS,kBAAQC,MAAR,EAAf;;AAEAD,QAAOE,GAAP,CAAW,GAAX,EAAgB;AAAA,+BAAa,WAAMC,OAAN,EAAeC,QAAf,EAA4B;AACxD,SAAMC,QAAQ,MAAM,eAAKC,IAAL,CAAU,EAAV,CAApB;AACAF,YAASG,IAAT,CAAcF,KAAd;AACA,GAHe;;AAAA;AAAA;AAAA;AAAA,MAAhB;;AAKAL,QAAOQ,IAAP,CAAY,GAAZ,EAAiB;AAAA,gCAAa,WAAML,OAAN,EAAeC,QAAf,EAA4B;AACzD,SAAMK,OAAO,mBAASN,QAAQO,IAAjB,CAAb;;AAEA,OAAI;AACH,UAAMD,KAAKE,QAAL,EAAN;AACA,IAFD,CAEE,OAAOC,GAAP,EAAY;AACb,UAAM,EAACC,QAAQ,GAAT,EAAcC,SAAS,aAAvB,EAAN;AACA;;AAED,SAAMC,YAAY,MAAMN,KAAKO,IAAL,EAAxB;AACAZ,YAASS,MAAT,CAAgB,GAAhB,EAAqBN,IAArB,CAA0BQ,SAA1B;AACA,GAXgB;;AAAA;AAAA;AAAA;AAAA,MAAjB;;AAaAf,QAAOiB,MAAP,CAAc,MAAd,EAAsB;AAAA,gCAAa,WAAMd,OAAN,EAAeC,QAAf,EAA4B;AAC9D,SAAM,EAACc,EAAD,KAAOf,QAAQgB,MAArB;AACA,OAAI;AACH,UAAM,eAAKC,iBAAL,CAAuBF,EAAvB,CAAN;AACA,IAFD,CAEE,OAAON,GAAP,EAAY;AACb,UAAM,EAACC,QAAQ,GAAT,EAAcC,SAAS,YAAvB,EAAN;AACA;AACDV,YAASS,MAAT,CAAgB,GAAhB,EAAqBN,IAArB,CAA0B,EAACO,SAAS,SAAV,EAA1B;AACA,GARqB;;AAAA;AAAA;AAAA;AAAA,MAAtB;;AAUAd,QAAOqB,GAAP,CAAW,MAAX,EAAmB;AAAA,gCAAa,WAAMlB,OAAN,EAAeC,QAAf,EAA4B;AAC3D,SAAM,EAACc,EAAD,KAAOf,QAAQgB,MAArB;AACA,OAAIV,IAAJ;;AAEA,OAAI;AACHA,WAAO,MAAM,eAAKa,iBAAL,CAAuBJ,EAAvB,EAA2Bf,QAAQO,IAAnC,EAAyC,EAACa,KAAK,IAAN,EAAzC,CAAb;AACA,IAFD,CAEE,OAAOX,GAAP,EAAY;AACb,UAAM,EAACC,QAAQ,GAAT,EAAcC,SAAS,YAAvB,EAAN;AACA;;AAED,OAAI,CAACL,IAAL,EAAW;AACV,UAAM,EAACI,QAAQ,GAAT,EAAcC,SAAU,oBAAmBI,EAAG,YAA9C,EAAN;AACA;;AAEDd,YAASS,MAAT,CAAgB,GAAhB,EAAqBN,IAArB,CAA0BE,IAA1B;AACA,GAfkB;;AAAA;AAAA;AAAA;AAAA,MAAnB;;AAiBA,QAAOT,MAAP;AACA,C","file":"blogs.js","sourcesContent":["import express from 'express';\nimport asyncHandler from 'express-async-handler';\nimport Blog from '../../models/blog';\n\nexport default () => {\n\tconst router = express.Router();\n\n\trouter.get('/', asyncHandler(async(request, response) => {\n\t\tconst blogs = await Blog.find({});\n\t\tresponse.json(blogs);\n\t}));\n\n\trouter.post('/', asyncHandler(async(request, response) => {\n\t\tconst blog = new Blog(request.body);\n\n\t\ttry {\n\t\t\tawait blog.validate();\n\t\t} catch (err) {\n\t\t\tthrow {status: 400, message: 'Bad Request'};\n\t\t}\n\n\t\tconst savedBlog = await blog.save();\n\t\tresponse.status(201).json(savedBlog);\n\t}));\n\n\trouter.delete('/:id', asyncHandler(async(request, response) => {\n\t\tconst {id} = request.params;\n\t\ttry {\n\t\t\tawait Blog.findByIdAndRemove(id);\n\t\t} catch (err) {\n\t\t\tthrow {status: 400, message: 'Invalid id'};\n\t\t}\n\t\tresponse.status(204).json({message: 'deleted'});\n\t}));\n\n\trouter.put('/:id', asyncHandler(async(request, response) => {\n\t\tconst {id} = request.params;\n\t\tlet blog;\n\n\t\ttry {\n\t\t\tblog = await Blog.findByIdAndUpdate(id, request.body, {new: true});\n\t\t} catch (err) {\n\t\t\tthrow {status: 400, message: 'Invalid id'};\n\t\t}\n\n\t\tif (!blog) {\n\t\t\tthrow {status: 404, message: `Resource with id ${id} not found`};\n\t\t}\n\n\t\tresponse.status(201).json(blog);\n\t}));\n\n\treturn router;\n};\n"]}