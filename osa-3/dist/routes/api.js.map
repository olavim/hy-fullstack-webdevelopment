{"version":3,"sources":["../../src/routes/api.js"],"names":["resources","router","Router","get","req","res","resourceName","params","resource","status","message","json","data","id","record","find","r","String","delete","recordIndex","findIndex","splice","post","body","Math","floor","random","push"],"mappings":";;;;;;;;kBAGe,UAASA,SAAT,EAAoB;AAClC,OAAMC,SAAS,kBAAQC,MAAR,EAAf;;AAEAD,QAAOE,GAAP,CAAW,gBAAX,EAA6B,CAACC,GAAD,EAAMC,GAAN,KAAc;AAC1C,QAAM,EAACC,YAAD,KAAiBF,IAAIG,MAA3B;AACA,QAAMC,WAAWR,UAAUM,YAAV,CAAjB;;AAEA,MAAI,CAACE,QAAL,EAAe;AACd,SAAM,EAACC,QAAQ,GAAT,EAAcC,SAAS,yBAAvB,EAAN;AACA;;AAEDL,MAAIM,IAAJ,CAASH,SAASI,IAAlB;AACA,EATD;;AAWAX,QAAOE,GAAP,CAAW,oBAAX,EAAiC,CAACC,GAAD,EAAMC,GAAN,KAAc;AAC9C,QAAM,EAACC,YAAD,EAAeO,EAAf,KAAqBT,IAAIG,MAA/B;AACA,QAAMC,WAAWR,UAAUM,YAAV,CAAjB;;AAEA,MAAI,CAACE,QAAL,EAAe;AACd,SAAM,EAACC,QAAQ,GAAT,EAAcC,SAAS,yBAAvB,EAAN;AACA;;AAED,QAAMI,SAASN,SAASI,IAAT,CAAcG,IAAd,CAAmBC,KAAKC,OAAOD,EAAEH,EAAT,MAAiBA,EAAzC,CAAf;;AAEA,MAAI,CAACC,MAAL,EAAa;AACZ,SAAM,EAACL,QAAQ,GAAT,EAAcC,SAAS,uBAAvB,EAAN;AACA;;AAEDL,MAAIM,IAAJ,CAASG,MAAT;AACA,EAfD;;AAiBAb,QAAOiB,MAAP,CAAc,oBAAd,EAAoC,CAACd,GAAD,EAAMC,GAAN,KAAc;AACjD,QAAM,EAACC,YAAD,EAAeO,EAAf,KAAqBT,IAAIG,MAA/B;AACA,QAAMC,WAAWR,UAAUM,YAAV,CAAjB;;AAEA,MAAI,CAACE,QAAL,EAAe;AACd,SAAM,EAACC,QAAQ,GAAT,EAAcC,SAAS,yBAAvB,EAAN;AACA;;AAED,QAAMS,cAAcX,SAASI,IAAT,CAAcQ,SAAd,CAAwBJ,KAAKC,OAAOD,EAAEH,EAAT,MAAiBA,EAA9C,CAApB;;AAEA,MAAIM,cAAc,CAAlB,EAAqB;AACpB,SAAM,EAACV,QAAQ,GAAT,EAAcC,SAAS,uBAAvB,EAAN;AACA;;AAEDF,WAASI,IAAT,CAAcS,MAAd,CAAqBF,WAArB,EAAkC,CAAlC;AACAd,MAAIM,IAAJ,CAAS,EAACF,QAAQ,IAAT,EAAT;AACA,EAhBD;;AAkBAR,QAAOqB,IAAP,CAAY,gBAAZ,EAA8B,CAAClB,GAAD,EAAMC,GAAN,KAAc;AAC3C,QAAM,EAACC,YAAD,KAAiBF,IAAIG,MAA3B;AACA,QAAMC,WAAWR,UAAUM,YAAV,CAAjB;;AAEA,MAAI,CAACE,QAAL,EAAe;AACd,SAAM,EAACC,QAAQ,GAAT,EAAcC,SAAS,yBAAvB,EAAN;AACA;;AAED,QAAME,OAAO,wBAASJ,QAAT,EAAmBJ,IAAImB,IAAvB,CAAb;;AAEA,QAAMV,KAAKW,KAAKC,KAAL,CAAWD,KAAKE,MAAL,KAAgB,UAA3B,CAAX;AACA,QAAMZ,oBAAUD,EAAV,IAAiBD,IAAjB,CAAN;;AAEAJ,WAASI,IAAT,CAAce,IAAd,CAAmBb,MAAnB;;AAEAT,MAAIM,IAAJ,CAASG,MAAT;AACA,EAhBD;;AAkBA,QAAOb,MAAP;AACA,C;;AAvED;;;;AACA","file":"api.js","sourcesContent":["import express from 'express';\nimport validate from '../lib/validate';\n\nexport default function(resources) {\n\tconst router = express.Router();\n\n\trouter.get('/:resourceName', (req, res) => {\n\t\tconst {resourceName} = req.params;\n\t\tconst resource = resources[resourceName];\n\n\t\tif (!resource) {\n\t\t\tthrow {status: 404, message: 'resource does not exist'};\n\t\t}\n\n\t\tres.json(resource.data);\n\t});\n\n\trouter.get('/:resourceName/:id', (req, res) => {\n\t\tconst {resourceName, id} = req.params;\n\t\tconst resource = resources[resourceName];\n\n\t\tif (!resource) {\n\t\t\tthrow {status: 404, message: 'resource does not exist'};\n\t\t}\n\n\t\tconst record = resource.data.find(r => String(r.id) === id);\n\n\t\tif (!record) {\n\t\t\tthrow {status: 404, message: 'record does not exist'};\n\t\t}\n\n\t\tres.json(record);\n\t});\n\n\trouter.delete('/:resourceName/:id', (req, res) => {\n\t\tconst {resourceName, id} = req.params;\n\t\tconst resource = resources[resourceName];\n\n\t\tif (!resource) {\n\t\t\tthrow {status: 404, message: 'resource does not exist'};\n\t\t}\n\n\t\tconst recordIndex = resource.data.findIndex(r => String(r.id) === id);\n\n\t\tif (recordIndex < 0) {\n\t\t\tthrow {status: 404, message: 'record does not exist'};\n\t\t}\n\n\t\tresource.data.splice(recordIndex, 1);\n\t\tres.json({status: 'ok'});\n\t});\n\n\trouter.post('/:resourceName', (req, res) => {\n\t\tconst {resourceName} = req.params;\n\t\tconst resource = resources[resourceName];\n\n\t\tif (!resource) {\n\t\t\tthrow {status: 404, message: 'resource does not exist'};\n\t\t}\n\n\t\tconst data = validate(resource, req.body);\n\n\t\tconst id = Math.floor(Math.random() * 1000000000);\n\t\tconst record = {id, ...data};\n\n\t\tresource.data.push(record);\n\n\t\tres.json(record);\n\t});\n\n\treturn router;\n}"]}