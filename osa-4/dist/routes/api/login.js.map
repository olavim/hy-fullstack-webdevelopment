{"version":3,"sources":["../../../src/routes/api/login.js"],"names":["router","Router","post","request","response","username","password","body","user","findOne","status","message","passwordCorrect","compare","passwordHash","userForToken","id","token","sign","process","env","SECRET","send"],"mappings":";;;;;;AAAA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;;;;;kBAEe,MAAM;AACpB,OAAMA,SAAS,kBAAQC,MAAR,EAAf;;AAEAD,QAAOE,IAAP,CAAY,GAAZ,EAAiB;AAAA,+BAAa,WAAMC,OAAN,EAAeC,QAAf,EAA4B;AACzD,SAAM,EAACC,QAAD,EAAWC,QAAX,KAAuBH,QAAQI,IAArC;;AAEA,SAAMC,OAAO,MAAM,eAAKC,OAAL,CAAa,EAACJ,QAAD,EAAb,CAAnB;;AAEA,OAAI,CAACG,IAAL,EAAW;AACV,UAAM,EAACE,QAAQ,GAAT,EAAcC,SAAS,kBAAvB,EAAN;AACA;;AAED,SAAMC,kBAAkBJ,SAAS,IAAT,GACvB,KADuB,GAEvB,MAAM,iBAAOK,OAAP,CAAeP,QAAf,EAAyBE,KAAKM,YAA9B,CAFP;;AAIA,OAAI,CAACF,eAAL,EAAsB;AACrB,UAAM,EAACF,QAAQ,GAAT,EAAcC,SAAS,kBAAvB,EAAN;AACA;;AAED,SAAMI,eAAe;AACpBV,cAAUG,KAAKH,QADK;AAEpBW,QAAIR,KAAKQ;AAFW,IAArB;;AAKA,SAAMC,QAAQ,uBAAIC,IAAJ,CAASH,YAAT,EAAuBI,QAAQC,GAAR,CAAYC,MAAnC,CAAd;;AAEAjB,YAASM,MAAT,CAAgB,GAAhB,EAAqBY,IAArB,CAA0B,EAACL,KAAD,EAAQZ,UAAUG,KAAKH,QAAvB,EAA1B;AACA,GAzBgB;;AAAA;AAAA;AAAA;AAAA,MAAjB;;AA2BA,QAAOL,MAAP;AACA,C","file":"login.js","sourcesContent":["import express from 'express';\nimport bcrypt from 'bcrypt';\nimport jwt from 'jsonwebtoken';\nimport asyncHandler from 'express-async-handler';\nimport User from '../../models/user';\n\nexport default () => {\n\tconst router = express.Router();\n\n\trouter.post('/', asyncHandler(async(request, response) => {\n\t\tconst {username, password} = request.body;\n\n\t\tconst user = await User.findOne({username});\n\n\t\tif (!user) {\n\t\t\tthrow {status: 400, message: 'Invalid username'};\n\t\t}\n\n\t\tconst passwordCorrect = user === null ?\n\t\t\tfalse :\n\t\t\tawait bcrypt.compare(password, user.passwordHash);\n\n\t\tif (!passwordCorrect) {\n\t\t\tthrow {status: 401, message: 'Invalid password'};\n\t\t}\n\n\t\tconst userForToken = {\n\t\t\tusername: user.username,\n\t\t\tid: user.id\n\t\t};\n\n\t\tconst token = jwt.sign(userForToken, process.env.SECRET);\n\n\t\tresponse.status(200).send({token, username: user.username});\n\t}));\n\n\treturn router;\n};\n"]}